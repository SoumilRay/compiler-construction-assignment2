%{
#include "lex.yy.c"
#include <stdio.h>
#include <stdlib.h>
%}
%token PROGRAM IDENTIFIER VAR BEGINN END PERIOD INTEGER REAL BOOLEAN CHARACTER COLON SEMICOLON COMMA VTYPE REL_OP BOOL_OP AR_OP TO DOWNTO IF ELSE WHILE FOR DO ARRAY READ WRITE QUESTIONMARK EXCLAMATIONMARK STRING FNUMBER DNUMBER BO BC ASS_OP THEN SBO SBC OF
%%

S: PROGRAM IDENTIFIER SEMICOLON VAR VARLINES BLOCK PERIOD {return 1;}
 ;
VARLINES: VARLINE VARLINES
        | VARLINE
        ;
VARLINE: IDENTIFIER COMMA VARLINE
       | IDENTIFIER COLON TYPE SEMICOLON
       | ARRAY_DECLARATION
       ;
       
BLOCK: BEGINN STATEMENTS END
     ;
     
STATEMENTS: STATEMENT STATEMENTS
          | STATEMENT
          ;    
     
STATEMENT: BLOCK
         | READING
         | WRITING
         | ASSIGNMENT
         | SIMPLEIF
         | IFTHENELSE
         | ARRAY_INDEXING
         | WHILEDO
         | FORDO
         ;
          
READING: READ BO IDENTIFIERS BC SEMICOLON
       | READ BO ARRAY_INDEXING BC SEMICOLON
       ;
       
WRITING: WRITE BO WRITECONTENTS BC SEMICOLON
       ;
       
WRITECONTENTS: STRINGS WRITECONTENTS
             | IDENTIFIERS WRITECONTENTS
             | STRING
             | IDENTIFIER
             ;

IDENTIFIERS: IDENTIFIER COMMA IDENTIFIERS
           | IDENTIFIER
           ;
           
STRINGS: STRING COMMA STRINGS
       | STRING
       ;
       
ASSIGNMENT: IDENTIFIER ASS_OP EXPRESSION SEMICOLON
              | IDENTIFIER ASS_OP DNUMBER SEMICOLON
              | IDENTIFIER ASS_OP FNUMBER SEMICOLON
          ;
          
SIMPLEIF: IF WHILEDO_EXPRESSION THEN BLOCK SEMICOLON
        ;
        
IFTHENELSE: IF WHILEDO_EXPRESSION THEN BLOCK ELSE BLOCK SEMICOLON
          ;
          
WHILEDO: WHILE BO WHILEDO_EXPRESSION BC DO BLOCK SEMICOLON
       ;
      
FORDO: FOR IDENTIFIER ASS_OP FORDO_EXPRESSION TO FORDO_EXPRESSION DO BLOCK SEMICOLON
     ;
     
EXPRESSION: ARITHMETIC_EXPRESSION
              | BOOLEAN_EXPRESSION
              | RELATIONAL_EXPRESSION
          ;

FORDO_EXPRESSION: ARITHMETIC_EXPRESSION 
                     | DNUMBER
                     | FNUMBER
                     ;

WHILEDO_EXPRESSION: BOOLEAN_EXPRESSION
                     | RELATIONAL_EXPRESSION
                     ;

ARITHMETIC_EXPRESSION: DNUMBER AR_OP DNUMBER
                     | FNUMBER AR_OP FNUMBER
                     | DNUMBER AR_OP IDENTIFIER
                     | IDENTIFIER AR_OP IDENTIFIER
                     | IDENTIFIER AR_OP ARRAY_INDEXING
                     | DNUMBER AR_OP ARRAY_INDEXING
                     | ARRAY_INDEXING AR_OP ARITHMETIC_EXPRESSION
                     | ARRAY_INDEXING AR_OP DNUMBER
                     | ARRAY_INDEXING AR_OP FNUMBER
                     | ARRAY_INDEXING AR_OP IDENTIFIER
                     | IDENTIFIER AR_OP DNUMBER
                     | IDENTIFIER AR_OP ARITHMETIC_EXPRESSION
                     | DNUMBER AR_OP ARITHMETIC_EXPRESSION
                     | FNUMBER AR_OP ARITHMETIC_EXPRESSION
                     ;
RELATIONAL_EXPRESSION: DNUMBER REL_OP DNUMBER
                     | FNUMBER REL_OP FNUMBER
                     | DNUMBER REL_OP IDENTIFIER
                     | IDENTIFIER REL_OP IDENTIFIER
                     | IDENTIFIER REL_OP DNUMBER
                     | IDENTIFIER REL_OP RELATIONAL_EXPRESSION
                     | DNUMBER REL_OP RELATIONAL_EXPRESSION
                     | FNUMBER REL_OP RELATIONAL_EXPRESSION
                     ; 
BOOLEAN_EXPRESSION: DNUMBER BOOL_OP DNUMBER
                     | FNUMBER BOOL_OP FNUMBER
                     | DNUMBER BOOL_OP IDENTIFIER
                     | IDENTIFIER BOOL_OP IDENTIFIER
                     | IDENTIFIER BOOL_OP DNUMBER
                     | IDENTIFIER BOOL_OP BOOLEAN_EXPRESSION
                     | DNUMBER BOOL_OP BOOLEAN_EXPRESSION
                     | FNUMBER BOOL_OP BOOLEAN_EXPRESSION
                     ; 

ARRAY_DECLARATION: IDENTIFIER COLON ARRAY SBO DNUMBER PERIOD PERIOD DNUMBER SBC OF TYPE
                     ;

ARRAY_INDEXING: IDENTIFIER SBO ARITHMETIC_EXPRESSION SBC
                     | IDENTIFIER SBO DNUMBER SBC
                     | IDENTIFIER SBO IDENTIFIER SBC
                     ;
TYPE: INTEGER
       | REAL
       | CHARACTER
       | BOOLEAN
       ;
%%

void main()
{      yyin = fopen("testcase.txt","r");
	yyparse();
       fclose(yyin);
	printf("valid input\n");
	exit(0);
}

void yyerror()
{
	printf("syntax error\n");
	exit(0);
}
