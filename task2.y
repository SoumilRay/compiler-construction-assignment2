%{
#include <stdio.h>
#include <stdlib.h>
%}
%token PROGRAM IDENTIFIER VAR BEGINN END PERIOD INTEGER REAL BOOLEAN CHAR COLON SEMICOLON COMMA VTYPE REL_OP BOOL_OP AR_OP TO DOWNTO IF ELSE WHILE FOR DO ARRAY READ WRITE QUESTIONMARK EXCLAMATIONMARK STRING FNUMBER DNUMBER BO BC ASS_OP THEN
%%

S: PROGRAM IDENTIFIER SEMICOLON VAR VARLINES BLOCK PERIOD {return 1;}
 ;
VARLINES: VARLINE VARLINES
        | VARLINE
        ;
VARLINE: IDENTIFIER COMMA VARLINE
       | IDENTIFIER COLON VTYPE SEMICOLON
       ;
       
BLOCK: BEGINN STATEMENTS END
     ;
     
STATEMENTS: STATEMENT STATEMENTS
          | STATEMENT
          ;    
     
STATEMENT: BLOCK
         | READING
         | WRITING
         | ASSIGNMENT
         | SIMPLEIF
         | IFTHENELSE
         | WHILEDO
         | FORDO
         ;
          
READING: READ BO IDENTIFIERS BC SEMICOLON
       ;
       
WRITING: WRITE BO WRITECONTENTS BC SEMICOLON
       ;
       
WRITECONTENTS: STRINGS WRITECONTENTS
             | IDENTIFIERS WRITECONTENTS
             | STRING
             | IDENTIFIER
             ;

IDENTIFIERS: IDENTIFIER COMMA IDENTIFIERS
           | IDENTIFIER
           ;
           
STRINGS: STRING COMMA STRINGS
       | STRING
       ;
       
ASSIGNMENT: IDENTIFIER ASS_OP EXPRESSION SEMICOLON
          ;
          
SIMPLEIF: IF EXPRESSION THEN BLOCK SEMICOLON
        ;
        
IFTHENELSE: IF EXPRESSION THEN BLOCK ELSE BLOCK SEMICOLON
          ;
          
WHILEDO: WHILE BO EXPRESSION BC DO BLOCK SEMICOLON
       ;
      
FORDO: FOR IDENTIFIER ASS_OP EXPRESSION TO EXPRESSION DO BLOCK SEMICOLON
     ;
     
EXPRESSION: IDENTIFIER REL_OP IDENTIFIER
          ;
%%

void main()
{
	yyparse();
	printf("valid input");
	exit(0);
}

void yyerror()
{
	printf("syntax error");
	exit(0);
}
